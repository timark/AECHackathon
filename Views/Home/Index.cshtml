@{

    Layout = "~/Views/Shared/_LayoutModel.cshtml";
}
<link type="text/css" rel="stylesheet" href="https://developer.api.autodesk.com/viewingservice/v1/viewers/style.css" />
<!-- CONTENT -->
<!--===================================================-->

    <!-- CONTENT CONTAINER -->
    <!--===================================================-->
    
        <!-- PAGE CONTENT -->
        <div id="page-content">
            <div id="viewerDiv" ></div>
        </div>


<!--===================================================-->
<!-- END OF CONTENT CONTAINER -->
@section scripts
{
@Scripts.Render("~/bundles/AECHackathon")
<script src="https://developer.api.autodesk.com/viewingservice/v1/viewers/viewer3D.min.js"></script>
<script src="https://rawgit.com/Developer-Autodesk/library-javascript-view.and.data.api/master/js/Autodesk.ADN.Toolkit.Viewer.js"></script>

    <script>
        document.body.style.height = "100%";
        /*get auto desk stuff*/
        @Html.Raw(@ViewBag.autoDesk)
    </script>
    <script src="~/Scripts/index.js"></script>
    
    <script>

        function currentSelection()
        {
            /* clear the current selected panel of values and reset the suppliers product table report */

            $("#supplierProductsTable").bootstrapTable("destroy");
            var ss = $("<table></table>").attr("id", "supplierProductsTable").attr("name", "supplierProductsTable").addClass("table table-striped table-bordered");
            $("#supplierProductsTablePanel").append(ss);

            $("#model-selected-id").html("");
            $("#model-selected-name").html("");
            $("#model-selected-ifcObjectType").html("");

            console.log("get selected Id");
            var selectionIds = viewer.getSelection();
            $("#model-selected-id").html(selectionIds);
            /* get the first selected object in the list We will work out multiples later by changing the current selected to a list then click on each to get Suppliers */
            viewer.getProperties(selectionIds[0], getPropertiesById);
            
        }

        var objSelected = { ifcObjectType: "", Manufacturer: "", ProductModel: "" };

        function getPropertiesById(data)
        {
                        
            console.log(data.name)
            $("#model-selected-name").html(data.name);
                    
            var props = data.properties;

            for (var i = 0; i < props.length; i++) {
                if (props[i].displayName == "IfcExportAs")
                {
                    objSelected.ifcObjectType = props[i].displayValue;
                }
                if (props[i].displayName == "Manufacturer") {
                    objSelected.Manufacturer = props[i].displayValue;
                }
                if (props[i].displayName == "Model") {
                    objSelected.ProductModel = props[i].displayValue;
                }
            }

            if (objSelected.ifcObjectType.length > 0)
            {
                $("#model-selected-ifcObjectType").html(objSelected.ifcObjectType);
                getSuppliersByIfcObjectType(objSelected)
               
            }
        }

        /*
        Call to the TomCAT Javaserver

        function getSuppliersByIfcObjectType(ifcObjectType) {
            console.log("make call to java tomcat server" + ifcObjectType);
            var strHTML = "";
          
            $.ajax({
                type: 'GET',
                url: 'http://172.16.2.94:8080/CounterWebApp/manufacturer/getManufacturerProducts',
                contentType: 'application/x-www-form-urlencoded',
                data: {
                    
                    'gui': '',
                    'type': ifcObjectType
                    
                },
                dataType: 'xml',
                success: function (xmldoc) {
                    
                    $(xmldoc).find('list').each(function (i) {
                        
                        IDSupplier = $(this).find('idSupplier').text()
                        SupplierName = $(this).find('name').text()
                        NoOfProducts = $(this).find('numOfProducts').text()
                        console.log(SupplierName);
                        strHTML += "<a href='#' class='list-group-item' onclick='getProductsByIDSupplier(&quot;" + IDSupplier + "&quot;)'>"
                        strHTML += "<span class='pull-right badge badge-warning'>" + NoOfProducts + "</span>" + SupplierName 
                        strHTML += "</a>"

                        
                    })

                   console.log (strHTML)
                    $("#model_product_suppliers").html(strHTML)
                   

                }
            });


        }
*/
        var IDTemplateCategory;
        var selectedProductName;

        function getSuppliersByIfcObjectType(obj) {
            console.log("make direct call to Product Library for : " + obj.ifcObjectType);
            

            $.ajax({
                type: 'POST',
                url: 'http://www.activebim.com/api.asmx/GetSupplierProductsByIfcObjectType',
                contentType: 'application/x-www-form-urlencoded',
                data: {
                 
                    'IfcObjectType': obj.ifcObjectType,
                    'Manufacturer': obj.Manufacturer,
                    'ProductModel': obj.ProductModel

                },
                dataType: 'xml',
                success: function (xmldoc) {
                    var objSupplierData = [];
                    $(xmldoc).find('DataSet').each(function (i) {

                        IDSupplier = $(this).find('IDSupplier').text()
                        SupplierName = $(this).find('Name').text()
                        NoOfProducts = $(this).find('NoProduct').text()
                        IDTemplateCategory = $(this).find('IDTemplateCategory').text()
                        console.log(SupplierName);
                        if (NoOfProducts > 0)
                        {                           
                            var actBtns = "<div class='btn-group'>"
                            actBtns += "<button class='btn btn-default btn-icon btn-hover-info icon-lg fa fa-cubes add-tooltip' onclick='getProductsByIDSupplier(&quot;" + IDSupplier + "&quot;)' title='products'></button>"
                            actBtns += "</div>"
                            var obj = {
                                IDSupplier: IDSupplier,
                                SupplierName: SupplierName,
                                NoOfProducts: NoOfProducts,
                                IDTemplateCategory : IDTemplateCategory,
                                actionButtons: actBtns
                            }
                            objSupplierData.push(obj);
                        }
                    })

                    $('#supplierProductsTable').bootstrapTable({

                        data: objSupplierData,
                        striped: true,
                        pagination: true,
                        pageSize: 15,
                        pageList: [15, 20, 50],
                        search: true,
                        showToggle: true,
                        showColumns: true,
                        showRefresh: true,
                        showPaginationSwitch: true,
                        minimumCountColumns: 1,

                        columns: [{
                            field: 'SupplierName',
                            title: 'Manufacturer',
                            align: 'left',
                            valign: 'bottom',
                            sortable: true
                        }, {
                            field: 'NoOfProducts',
                            title: 'Products',
                            align: 'left',
                            valign: 'middle',
                            sortable: true
                        }, {
                            field: 'actionButtons',
                            title: 'actions',
                            align: 'left',
                            valign: 'middle',
                            sortable: false
                        }]
                    });

                   
                }
            });
        }

        function getProductsByIDSupplier(IDSupplier) {
            console.log("make call directly to product library for products");
            var objProductsData = [];

            $.ajax({
                type: 'POST',
                url: 'http://www.activebim.com/API.asmx/GetSupplierProducts',
                contentType: 'application/x-www-form-urlencoded',
                data: {

                    
                    "strIDSupplier" : IDSupplier, 
                    "strIDProduct": "",
                    "strIDTemplate": "",
                    "strIDTemplateCategory": IDTemplateCategory,
                    "ProductName" : "", 
                    "Description" : "", 
                    "Reference" : "", 
                    "ModelNumber" : "", 
                    "OrderBy" : "", 
                    "UpDown" : ""

                },
                dataType: 'xml',
                success: function (xmldoc) {

                    $(xmldoc).find('DataSet').each(function (i) {

                        IDSupplier = $(this).find('IDSupplier').text()
                        SupplierName = $(this).find('SupplierName').text()
                        IDProduct = $(this).find('IDProduct').text()
                        Reference = $(this).find('Referenece').text()
                        ModelNumber = $(this).find('ModelNumber').text()
                        ProductName = $(this).find('ProductName').text()
                        Template = $(this).find('Template').text()
                        NominalWidth = $(this).find('NominalWidth').text()
                        NominalHeight = $(this).find('NominalHeight').text()
                        NominalLength = $(this).find('NominalLength').text()
                        ModelWidth = $(this).find('ModelWidth').text()
                        ModelHeight = $(this).find('ModelHeight').text()
                        ModelLength = $(this).find('ModelLength').text()
                        Colour = $(this).find('Colour').text()
                        Finish = $(this).find('Finish').text()
                        Features = $(this).find('Features').text()
                        IDMedia = $(this).find('IDMedia').text()
                        IDMaintenanceSet = $(this).find('IDMaintenanceSet').text()
                        NoOfProductModels = $(this).find('NoOfProductModels').text()

                        var actBtns = "<div class='btn-group'>"
                        actBtns += "<button class='btn btn-default btn-icon btn-hover-info icon-lg fa fa-cubes add-tooltip' onclick='getProductByID(&quot;" + IDProduct + "&quot;)' title='products'></button>"
                        var NominalSize;
                        if (NoOfProductModels == 1)
                        {
                            NominalSize = ModelLength + "x" + ModelWidth + "x" + ModelHeight;
                        } else {
                            NominalSize = NominalLength + "x" + NominalWidth + "x" + NominalHeight;
                        }
                        

                        var hasMaintenance = false;
                        if (IDMaintenanceSet.length > 0)
                        {
                            hasMaintenance = true;
                        }
                        actBtns += "<button class='btn btn-default btn-icon btn-hover-info icon-lg fa fa-wrench add-tooltip' onclick='getProductMaintenanceByID(&quot;" + IDProduct + "&quot;,&quot;" + ProductName + "&quot;)' title='maintenance'></button>"

                        actBtns += "</div>"
                        var obj = {
                            IDSupplier: IDSupplier,
                            SupplierName : SupplierName, 
                            IDProduct: IDProduct,
                            IDMaintenanceSet : IDMaintenanceSet,
                            hasMaintenance: hasMaintenance,
                            SupplierName : SupplierName,
                            Reference: Reference,
                            ModelNumber: ModelNumber,
                            ProductName: ProductName,
                            Template: Template,
                            NominalWidth: NominalWidth,
                            NominalHeight: NominalHeight,
                            NominalLength: NominalLength,
                            NominalSize : NominalSize,
                            Colour: Colour,
                            Finish: Finish,
                            Features: Features,
                            actionButtons: actBtns
                        }

                        objProductsData.push(obj);
                        
                    })

                    modalPanel(objProductsData)
                   
                }
            });


        }

        function modalPanel(objProductsData)
        {
            var content = "<div class='panel'>"
            content += "<div class='panel-heading'><h3 class='panel-title'>" + objProductsData[0].SupplierName + "</h3></div>"
            content += "<div class='panel-body' id='productsTable'>"

            content += "</div>"
            content += "</div>"
            bootbox.dialog({
                title: "Manufacturers of type " + objSelected.ifcObjectType,
                message: content,
                buttons: {
                    confirm: {
                        label: "Close"
                    }
                }
            });

            $('#productsTable').bootstrapTable({

                data: objProductsData,
                striped: true,
                pagination: true,
                pageSize: 15,
                pageList: [15, 20, 50],
                search: true,
                showToggle: true,
                showColumns: true,
                showRefresh: true,
                showPaginationSwitch: true,
                minimumCountColumns: 1,

                columns: [{
                    field: 'ProductName',
                    title: 'Product',
                    align: 'left',
                    valign: 'bottom',
                    sortable: true
                }, {
                    field: 'Reference',
                    title: 'Reference',
                    align: 'left',
                    valign: 'middle',
                    sortable: true
                },
                {
                    field: 'ModelNumber',
                    title: 'Model Number',
                    align: 'left',
                    valign: 'middle',
                    sortable: true
                },
                {
                    field: 'NominalSize',
                    title: 'Size',
                    align: 'left',
                    valign: 'middle',
                    sortable: false
                },{
                    field: 'actionButtons',
                    title: 'actions',
                    align: 'left',
                    valign: 'middle',
                    sortable: false
                }]
            });
        }

        function getProductMaintenanceByID(IDProduct, ProductName) {
            console.log("make call directly to product library for products");
            selectedProductName = ProductName;
            var objMaintenanceData = [];

            $.ajax({
                type: 'POST',
                url: 'http://www.activebim.com/API.asmx/GetProductMaintenanceTasksCombined',
                contentType: 'application/x-www-form-urlencoded',
                data: {

                    "strIDProduct": IDProduct,
                    "OrderBy": "FrequencySortOrder,TaskSortOrder",
                    "UpDown": "ASC"

                },
                dataType: 'xml',
                success: function (xmldoc) {

                    $(xmldoc).find('DataSet').each(function (i) {

                        IDMaintenanceSetToTask = $(this).find('IDMaintenanceSetToTask').text()
                        Duration = $(this).find('Duration').text()
                        DurationUnit = $(this).find('DurationUnit').text()
                        Frequency = $(this).find('Frequency').text()
                        FrequencyUnit = $(this).find('FrequencyUnit').text()
                        Reference = $(this).find('Reference').text()
                        Description = $(this).find('Description').text()
                        FrequencySortOrder = $(this).find('FrequencySortOrder').text()
                        TaskSortOrder = $(this).find('TaskSortOrder').text()


                        var obj = {
                            IDMaintenanceSetToTask: IDMaintenanceSetToTask,
                            Duration: Duration,
                            DurationUnit: DurationUnit,
                            Frequency: Frequency,
                            FrequencyUnit: FrequencyUnit,
                            Reference: Reference,
                            Description: Description,
                            FrequencySortOrder: FrequencySortOrder,
                            TaskSortOrder: TaskSortOrder
                        }

                        objMaintenanceData.push(obj);

                    })

                    modalMaintenancePanel(objMaintenanceData)

                }
            });


        }

        function modalMaintenancePanel(objMaintenanceData) {
            var content = "<div class='panel-group accordion'>"
            var title = "";

            for (var i = 0; i < objMaintenanceData.length; i++) {
            content += "<div class='panel'>"
                content += "<div class='panel-heading'>"
                content += "<h4 class='panel-title'>"
                title = objMaintenanceData[i].Reference + "[Frequency:" + objMaintenanceData[i].Frequency + " " + objMaintenanceData[i].FrequencyUnit + "]"
                title += "(duration " + objMaintenanceData[i].Duration + " " + objMaintenanceData[i].DurationUnit + ")"
                    content += "<a data-parent='#accordion' data-toggle='collapse' href='#collapse" + i + "'>" + title + " </a>"
                    
                    content += "</h4>"
                content += "</div>"

                content += "<div class='panel-collapse collapse' id='collapse" + i + "'>"
                content += "<div class='panel-body contentText'>"
                    content += objMaintenanceData[i].Description
                    content += "</div>"
                content += "</div>"
            content += "</div>"

            }

            content += "</div>"
            content += "</div>"
            bootbox.dialog({
                title: "Maintenance Set for" + selectedProductName,
                message: content,
                buttons: {
                    confirm: {
                        label: "Close"
                    }
                }
            });


        }
 
       </script>
}